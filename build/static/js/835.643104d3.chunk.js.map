{"version":3,"file":"static/js/835.643104d3.chunk.js","mappings":"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","sources":["webpack://dashboard_test/./src/components/Button/button.module.scss?3bf9","components/Button/index.tsx","webpack://dashboard_test/./src/components/Title/title.module.scss?2fa4","components/Title/index.tsx","webpack://dashboard_test/./src/components/Header/header.module.scss?9a40","components/Header/index.tsx","webpack://dashboard_test/./src/components/ListItem/listItem.module.scss?82ce","components/ListItem/index.tsx","webpack://dashboard_test/./src/components/Statistics/statistics.module.scss?5e32","components/Statistics/index.tsx","components/Dashboard/index.tsx","containers/DashboardContainer/index.tsx","webpack://dashboard_test/./src/components/DraggableItem/draggableItem.module.scss?dc03","components/DraggableItem/index.tsx","webpack://dashboard_test/./src/components/FavoriteItems/favoriteItems.module.scss?c0b4","components/FavoriteItems/index.tsx","containers/FavoriteItemsContainer/index.tsx","pages/DashboardPage/index.tsx","stores/dashboardStore.ts","services/api.ts","stores/listStore.ts","stores/rootStore.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button_button__zpxkc\"};","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { IButtonProps } from \"./interface\";\nimport styles from \"./button.module.scss\";\n\nconst Button: React.FC<IButtonProps> = ({ title, to }) => {\n  const navigate = useNavigate();\n\n  return (\n    <button\n      onClick={() => navigate(to)}\n      className={styles.button}\n      data-testid=\"button-component\"\n    >\n      {title}\n    </button>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"title_title__CL1FB\"};","import React from \"react\";\nimport { ITitle } from \"./interface\";\nimport styles from \"./title.module.scss\";\n\nconst Title: React.FC<ITitle> = ({ title }) => {\n  return (\n    <h1 className={styles.title} data-testid=\"title-component\">\n      {title}\n    </h1>\n  );\n};\n\nexport default Title;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_header__A7NEZ\"};","import React from \"react\";\nimport { IHeaderProps } from \"./interface\";\nimport Button from \"components/Button\";\nimport Title from \"components/Title\";\nimport styles from \"./header.module.scss\";\n\nconst Header: React.FC<IHeaderProps> = ({ buttonTitle, title, to }) => {\n  return (\n    <header className={styles.header}>\n      <Title title={title} />\n      <Button to={to} title={buttonTitle} />\n    </header>\n  );\n};\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"listItem_wrapper__TClpf\",\"row1\":\"listItem_row1__e8JLx\",\"row2\":\"listItem_row2__x91zB\",\"title\":\"listItem_title__dYjlk\",\"button\":\"listItem_button__w83fL\",\"button__isFavorite\":\"listItem_button__isFavorite__TibtD\",\"text\":\"listItem_text__S2pW8\"};","import React from \"react\";\nimport { IListItemProps } from \"./interface\";\nimport styles from \"./listItem.module.scss\";\n\nconst ListItem: React.FC<IListItemProps> = ({ item, toggleFavorite }) => {\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.row1}>\n        <h5 className={styles.title}>{item.id}</h5>\n        {toggleFavorite && (\n          <button\n            onClick={() => toggleFavorite(item.id)}\n            className={`${styles.button} ${\n              item.isFavorite ? styles.button__isFavorite : \"\"\n            }`}\n          >\n            {item.isFavorite ? \"Удалить из избранного\" : \"Добавить в избранное\"}\n          </button>\n        )}\n      </div>\n      <div className={styles.row2}>\n        <img src={item.thumbnailUrl} alt={item.title} />\n        <p className={styles.text}>{item.title}</p>{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"statistics_wrapper__Te6Lp\",\"text\":\"statistics_text__kkPpz\"};","import React from \"react\";\nimport { IStatisticsProps } from \"./interface\";\nimport styles from \"./statistics.module.scss\";\n\nconst Statistics: React.FC<IStatisticsProps> = ({\n  favoriteItemsCount,\n  totalFileSize\n}) => {\n  return (\n    <div className={styles.wrapper}>\n      <p className={styles.text}>\n        Количество элементов в избранном: {favoriteItemsCount}\n      </p>\n      <p className={styles.text}>\n        Вес картинок всех элементов в избранном: {totalFileSize} MB\n      </p>\n    </div>\n  );\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport { IDashboardProps } from \"./interface\";\nimport Header from \"components/Header\";\nimport Statistics from \"components/Statistics\";\n\nconst Dashboard: React.FC<IDashboardProps> = ({\n  favoriteItemsCount,\n  totalFileSize\n}) => {\n  return (\n    <>\n      <Header title=\"Dashboard\" buttonTitle=\"Перейти в список\" to=\"/list\" />\n      <Statistics\n        favoriteItemsCount={favoriteItemsCount}\n        totalFileSize={totalFileSize}\n      />\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { useStores } from \"stores/rootStore\";\nimport Dashboard from \"components/Dashboard\";\n\nconst DashboardContainer: React.FC = observer(() => {\n  const { favoriteItems, totalFileSize } = useStores().dashboardStore;\n\n  return (\n    <Dashboard\n      favoriteItemsCount={favoriteItems.length}\n      totalFileSize={totalFileSize}\n    />\n  );\n});\n\nexport default DashboardContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"element\":\"draggableItem_element__fQMzc\",\"dragging\":\"draggableItem_dragging__NJ-p3\"};","import React, { useState } from \"react\";\nimport { IDraggableItemProps } from \"./interface\";\nimport ListItem from \"components/ListItem\";\nimport styles from \"./draggableItem.module.scss\";\n\nconst DraggableItem: React.FC<IDraggableItemProps> = ({\n  item,\n  index,\n  moveItem\n}) => {\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handleDragStart = (e: React.DragEvent<HTMLDivElement>) => {\n    if (e.dataTransfer) {\n      e.dataTransfer!.setData(\"text/plain\", index.toString());\n      setIsDragging(true);\n    }\n  };\n\n  const handleDragEnd = () => {\n    setIsDragging(false);\n  };\n\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const sourceIndex = parseInt(e.dataTransfer!.getData(\"text/plain\"));\n    moveItem(sourceIndex, index);\n  };\n\n  return (\n    <div\n      draggable\n      onDragStart={handleDragStart}\n      onDragEnd={handleDragEnd}\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n      className={`${styles.element} ${isDragging ? styles.dragging : \"\"}`}\n      data-testid=\"draggableItem\"\n    >\n      <ListItem key={item.id} item={item} />\n    </div>\n  );\n};\n\nexport default DraggableItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"favoriteItems_list__a8Ilx\"};","import React from \"react\";\nimport { IFavoriteItemsProps } from \"./interface\";\nimport DraggableItem from \"components/DraggableItem\";\nimport styles from \"./favoriteItems.module.scss\";\n\nconst FavoriteItems: React.FC<IFavoriteItemsProps> = ({\n  listItems,\n  favoriteItems,\n  moveItem\n}) => {\n  return (\n    <>\n      {favoriteItems.length ? (\n        <div className={styles.list} data-testid=\"favoriteItemsList\">\n          {favoriteItems.map((id: number, index: number) => (\n            <DraggableItem\n              key={id}\n              item={listItems[id]}\n              index={index}\n              moveItem={moveItem}\n            />\n          ))}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default FavoriteItems;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { useStores } from \"stores/rootStore\";\nimport FavoriteItems from \"components/FavoriteItems\";\n\nconst FavoriteItemsContainer: React.FC = observer(() => {\n  const { favoriteItems, updateFavorites } = useStores().dashboardStore;\n  const { listItems } = useStores().listStore;\n\n  const moveItem = (dragIndex: number, hoverIndex: number) => {\n    const newNumbers = [...favoriteItems];\n    const [draggedNumber] = newNumbers.splice(dragIndex, 1);\n    newNumbers.splice(hoverIndex, 0, draggedNumber);\n    updateFavorites(newNumbers);\n  };\n\n  return (\n    <FavoriteItems\n      favoriteItems={favoriteItems}\n      listItems={listItems}\n      moveItem={moveItem}\n    />\n  );\n});\n\nexport default FavoriteItemsContainer;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport DashboardContainer from \"containers/DashboardContainer\";\nimport FavoriteItemsContainer from \"containers/FavoriteItemsContainer\";\n\nconst DashboardPage: React.FC = observer(() => {\n  return (\n    <>\n      <DashboardContainer />\n      <FavoriteItemsContainer />\n    </>\n  );\n});\n\nexport default DashboardPage;\n","import { makeAutoObservable } from \"mobx\";\nimport { RootStore } from \"./rootStore\";\nclass DashboardStore {\n  rootStore: RootStore;\n\n  favoriteItems: number[] = [];\n  totalFileSize: number = 0;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n    makeAutoObservable(this);\n  }\n\n  calculateTotalFileSize = (newFavoriteItems: number[]) => {\n    this.totalFileSize = 0;\n    newFavoriteItems.forEach(\n      (item) =>\n        (this.totalFileSize += this.rootStore.listStore.listItems[item].size)\n    );\n  };\n\n  addNewFavoriteItem = (id: number) => {\n    this.favoriteItems.push(id);\n    this.calculateTotalFileSize(this.favoriteItems);\n  };\n\n  removeFavoriteItem = (id: number) => {\n    const newFavoriteItems = this.favoriteItems.filter(\n      (number) => number !== id\n    );\n    this.favoriteItems = newFavoriteItems;\n    this.calculateTotalFileSize(newFavoriteItems);\n  };\n\n  updateFavorites = (favorites: number[]) => {\n    this.favoriteItems = favorites;\n  };\n}\n\nexport { DashboardStore };\n","import { IListItems } from \"interfaces/ListItems\";\nimport { IListItem } from \"interfaces/ListItem\";\n\nexport async function fetchListItems(\n  page: number,\n  limit: number\n): Promise<IListItems> {\n  try {\n    const response = await fetch(\n      `https://jsonplaceholder.typicode.com/albums/1/photos?_page=${page}&_limit=${limit}`\n    );\n    const data = await response.json();\n\n    const getImageSize = async (url: string) => {\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const imageResponse = await fetch(proxyUrl + url);\n\n        const blob = await imageResponse.blob();\n        const sizeInMB = blob.size / (1024 * 1024);\n        return sizeInMB;\n      } catch (error) {\n        return 0;\n      }\n    };\n\n    const itemsWithSize: IListItems = {};\n\n    await Promise.all(\n      data.map(async (item: IListItem) => {\n        const sizeInMB = await getImageSize(item.thumbnailUrl);\n        itemsWithSize[item.id] = {\n          id: item.id,\n          title: item.title,\n          thumbnailUrl: item.thumbnailUrl,\n          isFavorite: false,\n          size: sizeInMB\n        };\n      })\n    );\n\n    return itemsWithSize;\n  } catch (error) {\n    throw error;\n  }\n}\n","import { makeAutoObservable } from \"mobx\";\nimport { RootStore } from \"./rootStore\";\nimport { fetchListItems } from \"services/api\";\nimport { IListItems } from \"interfaces/ListItems\";\n\nclass ListStore {\n  rootStore: RootStore;\n\n  listItems: IListItems = {};\n  isLoading: boolean = false;\n  isError: boolean = false;\n  page: number = 1;\n  limit: number = 20;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n    makeAutoObservable(this);\n  }\n\n  updateListItems(newItems: IListItems) {\n    this.listItems = newItems;\n  }\n\n  setIsLoading(value: boolean) {\n    this.isLoading = value;\n  }\n\n  setIsError(value: boolean) {\n    this.isError = value;\n  }\n\n  setPage(value: number) {\n    this.page = value;\n  }\n\n  loadListItems = async () => {\n    try {\n      if (this.isLoading) return;\n      this.setIsLoading(true);\n      const newItems: IListItems = await fetchListItems(this.page, this.limit);\n      this.updateListItems({ ...this.listItems, ...newItems });\n      this.setPage(this.page + 1);\n      this.setIsLoading(false);\n    } catch (error) {\n      this.setIsError(true);\n      this.setIsLoading(false);\n    }\n  };\n\n  toggleFavorite = (itemId: number) => {\n    const newListItems = { ...this.listItems };\n    newListItems[itemId] = {\n      ...this.listItems[itemId],\n      isFavorite: !this.listItems[itemId].isFavorite\n    };\n    this.updateListItems(newListItems);\n\n    if (newListItems[itemId].isFavorite) {\n      this.rootStore.dashboardStore.addNewFavoriteItem(itemId);\n    } else this.rootStore.dashboardStore.removeFavoriteItem(itemId);\n  };\n}\n\nexport { ListStore };\n","import { createContext, useContext } from \"react\";\nimport { DashboardStore } from \"./dashboardStore\";\nimport { ListStore } from \"./listStore\";\n\nexport class RootStore {\n  dashboardStore: DashboardStore;\n  listStore: ListStore;\n\n  constructor() {\n    this.dashboardStore = new DashboardStore(this);\n    this.listStore = new ListStore(this);\n  }\n}\n\nconst RootStoreContext = createContext<RootStore>(new RootStore());\n\nexport const useStores = () => useContext(RootStoreContext);\n"],"names":["_ref","title","to","navigate","useNavigate","_jsx","onClick","className","styles","children","buttonTitle","_jsxs","Title","Button","item","toggleFavorite","id","concat","isFavorite","src","thumbnailUrl","alt","favoriteItemsCount","totalFileSize","_Fragment","Header","Statistics","observer","_useStores$dashboardS","useStores","dashboardStore","favoriteItems","Dashboard","length","index","moveItem","_useState","useState","_useState2","_slicedToArray","isDragging","setIsDragging","draggable","onDragStart","e","dataTransfer","setData","toString","onDragEnd","onDragOver","preventDefault","onDrop","sourceIndex","parseInt","getData","ListItem","listItems","map","DraggableItem","updateFavorites","listStore","FavoriteItems","dragIndex","hoverIndex","newNumbers","_toConsumableArray","_newNumbers$splice","splice","draggedNumber","DashboardContainer","FavoriteItemsContainer","DashboardStore","_createClass","rootStore","_this","_classCallCheck","calculateTotalFileSize","newFavoriteItems","forEach","size","addNewFavoriteItem","push","removeFavoriteItem","filter","number","favorites","this","makeAutoObservable","fetchListItems","_x","_x2","_fetchListItems","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","page","limit","response","data","getImageSize","itemsWithSize","wrap","_context3","prev","next","fetch","sent","json","_callee","url","imageResponse","blob","sizeInMB","_context","abrupt","t0","stop","_x3","Promise","all","_ref2","_callee2","_context2","_x4","ListStore","isLoading","isError","loadListItems","newItems","setIsLoading","updateListItems","_objectSpread","setPage","setIsError","itemId","newListItems","key","value","RootStore","RootStoreContext","createContext","useContext"],"sourceRoot":""}